variables: 
  test_tag: '2023.01.01.009.ra.tt.n51.ab'

stages:          # List of stages for jobs, and their order of execution
  - preBuild1
  - preBuild2
  - build
  - deploy

show_variables: 
  stage: preBuild1
  tags:
    - gitlab-shared-runner
  script: 
    - echo $CI_COMMIT_REF_NAME
    - echo $CI_COMMIT_TAG
    - echo $test
    - echo $test_tag

testProd: 
  stage: preBuild2
  tags: 
    - gitlab-shared-runner
  only: 
    refs: 
      - develop
    variables: 
      - $CI_COMMIT_REF_NAME =~ /ra/ || $test_tag =~/ra/
  script: 
    - echo ' i am testProd'  

build-sv-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - gke-gitlab-runner
  only:
    refs:
      - develop
  allow_failure: true
  script:
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - docker build -f Dockerfile --build-arg env=dev --build-arg scope=app_sv -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-sv:dev .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-sv:dev

build-tt-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - gke-gitlab-runner
  only:
    refs:
      - develop
  allow_failure: true
  script:
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - docker build -f Dockerfile --build-arg env=dev --build-arg scope=app_tt -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-tt:dev .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-tt:dev
    - echo "Compile complete."

build-ra-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - gke-gitlab-runner
  only:
    refs:
      - develop
    #variables:
    #  - $youda =~ /^$/ || $youda =~ /ra/ || $test_tag =~/ra/
  allow_failure: true
  script:
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - docker build -f Dockerfile --build-arg env=dev --build-arg scope=app_ra -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-ra:dev .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-ra:dev
    - echo "Compile complete."

build-ab-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - gke-gitlab-runner
  only:
    refs:
      - develop
  allow_failure: true
  script:
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - docker build -f Dockerfile --build-arg env=dev --build-arg scope=app_ab -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-ab:dev .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-ab:dev
    - echo "Compile complete."
  
build-wl-id1-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - gke-gitlab-runner
  only:
    refs:
      - develop
  allow_failure: true
  script:
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - docker build -f Dockerfile --build-arg env=dev --build-arg scope=app_wl_id1 -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_id1:dev .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_id1:dev

build-wl-ph1-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - gke-gitlab-runner
  only:
    refs:
      - develop
  allow_failure: true
  script:
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - docker build -f Dockerfile --build-arg env=dev --build-arg scope=app_wl_ph1 -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_ph1:dev .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_ph1:dev

build-wl-tw1-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - gke-gitlab-runner
  only:
    refs:
      - develop
  allow_failure: true
  script:
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - docker build -f Dockerfile --build-arg env=dev --build-arg scope=app_wl_tw1 -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_tw1:dev .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_tw1:dev

build-wl-tw2-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - gke-gitlab-runner
  only:
    refs:
      - develop
  allow_failure: true
  script:
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - docker build -f Dockerfile --build-arg env=dev --build-arg scope=app_wl_tw2 -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_tw2:dev .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_tw2:dev

build-wl-cn1-job:       # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - gke-gitlab-runner
  only:
    refs:
      - develop
  allow_failure: true
  script:
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - docker build -f Dockerfile --build-arg env=dev --build-arg scope=app_wl_cn1 -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_cn1:dev .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-wl_cn1:dev

deploy-sv-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags:
    - gitlab-shared-runner
  only:
    refs:
      - develop
  script:
    - echo "Deploying application..."
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/dev --install "${CI_PROJECT_NAME}-sv" -f /home/gitlab-runner/hm-helm/helm-charts/sv/${CI_PROJECT_NAME}/values.yaml.dev --set global.release=$(echo "dev-`date +%F-%T`") /home/gitlab-runner/hm-helm/helm-charts/sv/${CI_PROJECT_NAME} -n video-dev
    - echo "Application successfully deployed."

deploy-tt-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags:
    - gitlab-shared-runner
  only:
    refs:
      - develop
  script:
    - echo "Deploying application..."
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/dev --install "${CI_PROJECT_NAME}-tt" -f /home/gitlab-runner/hm-helm/helm-charts/stt/${CI_PROJECT_NAME}-tt/values.yaml.dev --set global.release=$(echo "dev-`date +%F-%T`") /home/gitlab-runner/hm-helm/helm-charts/stt/${CI_PROJECT_NAME}-tt -n video-dev
    - echo "Application successfully deployed."

deploy-ra-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags:
    - gitlab-shared-runner
  only:
    refs:
      - develop
    #variables:
    #  - $youda =~ /^$/ || $youda =~ /ra/ || $test_tag =~/ra/
  script:
    - echo "Deploying application..."
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/dev --install "${CI_PROJECT_NAME}-ra" -f /home/gitlab-runner/hm-helm/helm-charts/stt/${CI_PROJECT_NAME}-ra/values.yaml.dev --set global.release=$(echo "dev-`date +%F-%T`") /home/gitlab-runner/hm-helm/helm-charts/stt/${CI_PROJECT_NAME}-ra -n video-dev
    - echo "Application successfully deployed."

deploy-ab-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags:
    - gitlab-shared-runner
  only:
    refs:
      - develop
  script:
    - echo "Deploying application..."
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/dev --install "${CI_PROJECT_NAME}-ab" -f /home/gitlab-runner/hm-helm/helm-charts/ab/${CI_PROJECT_NAME}/values.yaml.dev --set global.release=$(echo "dev-`date +%F-%T`") /home/gitlab-runner/hm-helm/helm-charts/ab/${CI_PROJECT_NAME} -n video-dev
    - echo "Application successfully deployed."

deploy-wl-id1-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags:
    - gitlab-shared-runner
  only:
    refs:
      - develop
  script:
    - echo "Deploying application..."
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/dev --install "${CI_PROJECT_NAME}-wl-id1" -f /home/gitlab-runner/hm-helm/helm-charts/wl-id1/${CI_PROJECT_NAME}/values.yaml.dev --set global.release=$(echo "dev-`date +%F-%T`") /home/gitlab-runner/hm-helm/helm-charts/wl-id1/${CI_PROJECT_NAME} -n video-dev
    - echo "Application successfully deployed."

deploy-wl-ph1-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags:
    - gitlab-shared-runner
  only:
    refs:
      - develop
  script:
    - echo "Deploying application..."
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/dev --install "${CI_PROJECT_NAME}-wl-ph1" -f /home/gitlab-runner/hm-helm/helm-charts/wl-ph1/${CI_PROJECT_NAME}/values.yaml.dev --set global.release=$(echo "dev-`date +%F-%T`") /home/gitlab-runner/hm-helm/helm-charts/wl-ph1/${CI_PROJECT_NAME} -n video-dev
    - echo "Application successfully deployed."

deploy-wl-tw1-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags:
    - gitlab-shared-runner
  only:
    refs:
      - develop
  script:
    - echo "Deploying application..."
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/dev --install "${CI_PROJECT_NAME}-wl-tw1" -f /home/gitlab-runner/hm-helm/helm-charts/wl-tw1/${CI_PROJECT_NAME}/values.yaml.dev --set global.release=$(echo "dev-`date +%F-%T`") /home/gitlab-runner/hm-helm/helm-charts/wl-tw1/${CI_PROJECT_NAME} -n video-dev
    - echo "Application successfully deployed."

deploy-wl-tw2-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags:
    - gitlab-shared-runner
  only:
    refs:
      - develop
  script:
    - echo "Deploying application..."
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/dev --install "${CI_PROJECT_NAME}-wl-tw2" -f /home/gitlab-runner/hm-helm/helm-charts/wl-tw2/${CI_PROJECT_NAME}/values.yaml.dev --set global.release=$(echo "dev-`date +%F-%T`") /home/gitlab-runner/hm-helm/helm-charts/wl-tw2/${CI_PROJECT_NAME} -n video-dev
    - echo "Application successfully deployed."

deploy-wl-cn1-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  tags:
    - gitlab-shared-runner
  only:
    refs:
      - develop
  script:
    - echo "Deploying application..."
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/dev --install "${CI_PROJECT_NAME}-wl-cn1" -f /home/gitlab-runner/hm-helm/helm-charts/wl-cn1/${CI_PROJECT_NAME}/values.yaml.dev --set global.release=$(echo "dev-`date +%F-%T`") /home/gitlab-runner/hm-helm/helm-charts/wl-cn1/${CI_PROJECT_NAME} -n video-dev
    - echo "Application successfully deployed."
################### --- ####################

build-prod-job: 
  stage: build
  tags: 
    - gitlab-shared-runner
  only: 
    refs: 
      - tags
  script: 
    - gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin asia-east2-docker.pkg.dev
    - PROJECT=$(echo $CI_COMMIT_REF_NAME | awk -F '.' '{print $NF}')
    - echo $PROJECT
    - docker build -f Dockerfile --build-arg env=prod --build-arg scope=app_$PROJECT -t asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-$PROJECT:${CI_COMMIT_TAG} .
    - docker push asia-east2-docker.pkg.dev/wgp-project-337610/wgp-video/${CI_PROJECT_NAME}-$PROJECT:${CI_COMMIT_TAG}


deploy-ab-prod-job: 
  stage: deploy
  tags: 
    - gitlab-shared-runner
  only: 
    refs: 
      - tags
    variables: 
      - $CI_COMMIT_REF_NAME =~ /ab$/
  script: 
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/ab --install ${CI_PROJECT_NAME} --wait --set global.release=${CI_COMMIT_TAG} --set global.image.tag=${CI_COMMIT_TAG} /home/gitlab-runner/hm-helm/helm-charts/ab/${CI_PROJECT_NAME} -n prod
    - /bin/bash /home/gitlab-runner/tg-notify.sh ab prod ${CI_PROJECT_NAME}-ab ${CI_COMMIT_TAG}

deploy-ra-prod-job: 
  stage: deploy
  tags: 
    - gitlab-shared-runner
  only: 
    refs: 
      - tags
    variables: 
      - $CI_COMMIT_REF_NAME =~ /ra$/
  script: 
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/ra --install "${CI_PROJECT_NAME}" --wait --set global.release=${CI_COMMIT_TAG} --set global.image.tag=${CI_COMMIT_TAG} /home/gitlab-runner/hm-helm/helm-charts/ra/${CI_PROJECT_NAME} -n prod
    - /bin/bash /home/gitlab-runner/tg-notify.sh ra prod ${CI_PROJECT_NAME} ${CI_COMMIT_TAG}

deploy-wl-tw1-prod-job: 
  stage: deploy
  tags: 
    - gitlab-shared-runner
  only: 
    refs: 
      - tags
    variables: 
      - $CI_COMMIT_REF_NAME =~ /wl_tw1$/
  script: 
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/wl-tw1 --install "${CI_PROJECT_NAME}" --wait --set global.release=${CI_COMMIT_TAG} --set global.image.tag=${CI_COMMIT_TAG} /home/gitlab-runner/hm-helm/helm-charts/wl-tw1/${CI_PROJECT_NAME} -n prod
    - /bin/bash /home/gitlab-runner/tg-notify.sh wl-tw1 prod ${CI_PROJECT_NAME} ${CI_COMMIT_TAG}

deploy-wl-tw2-prod-job: 
  stage: deploy
  tags: 
    - gitlab-shared-runner
  only: 
    refs: 
      - tags
    variables: 
      - $CI_COMMIT_REF_NAME =~ /wl_tw2$/
  script: 
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/wl-tw2 --install "${CI_PROJECT_NAME}" --wait --set global.release=${CI_COMMIT_TAG} --set global.image.tag=${CI_COMMIT_TAG} /home/gitlab-runner/hm-helm/helm-charts/wl-tw2/${CI_PROJECT_NAME} -n prod
    - /bin/bash /home/gitlab-runner/tg-notify.sh wl-tw2 prod ${CI_PROJECT_NAME} ${CI_COMMIT_TAG}

deploy-wl-id1-prod-job: 
  stage: deploy
  tags: 
    - gitlab-shared-runner
  only: 
    refs: 
      - tags
    variables: 
      - $CI_COMMIT_REF_NAME =~ /wl_id1$/
  script: 
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/wl-id1 --install "${CI_PROJECT_NAME}" --wait --set global.release=${CI_COMMIT_TAG} --set global.image.tag=${CI_COMMIT_TAG} /home/gitlab-runner/hm-helm/helm-charts/wl-id1/${CI_PROJECT_NAME} -n prod
    - /bin/bash /home/gitlab-runner/tg-notify.sh wl-id1 prod ${CI_PROJECT_NAME} ${CI_COMMIT_TAG}

deploy-wl-cn1-prod-job: 
  stage: deploy
  tags: 
    - gitlab-shared-runner
  only: 
    refs: 
      - tags
    variables: 
      - $CI_COMMIT_REF_NAME =~ /wl_cn1$/
  script: 
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/wl-cn1 --install "${CI_PROJECT_NAME}" --wait --set global.release=${CI_COMMIT_TAG} --set global.image.tag=${CI_COMMIT_TAG} /home/gitlab-runner/hm-helm/helm-charts/wl-cn1/${CI_PROJECT_NAME} -n prod
    - /bin/bash /home/gitlab-runner/tg-notify.sh wl-cn1 prod ${CI_PROJECT_NAME} ${CI_COMMIT_TAG}

deploy-wl-ph1-prod-job: 
  stage: deploy
  tags: 
    - gitlab-shared-runner
  only: 
    refs: 
      - tags
    variables: 
      - $CI_COMMIT_REF_NAME =~ /wl_ph1$/
  script: 
    - helm upgrade --kubeconfig /home/gitlab-runner/.kube/config-list/wl-ph1 --install "${CI_PROJECT_NAME}" --wait --set global.release=${CI_COMMIT_TAG} --set global.image.tag=${CI_COMMIT_TAG} /home/gitlab-runner/hm-helm/helm-charts/wl-ph1/${CI_PROJECT_NAME} -n prod
    - /bin/bash /home/gitlab-runner/tg-notify.sh wl-ph1 prod ${CI_PROJECT_NAME} ${CI_COMMIT_TAG}
